class s{rawBuffer=[];powerResults=[];initCalled=!1;constructor(s,e,t,r){this.frameSamples=s*e,this.numFrames=t,this.onPowerCallback=r}init(s){if(!this.initCalled)for(let e=0;e<s;e++)this.powerResults[e]=[];this.initCalled=!0}appendData(s){this.init(s.length);let t=Array(s.length);s.forEach(((s,r)=>{this.rawBuffer[r]||(this.rawBuffer[r]=new e(this.frameSamples));const o=this.rawBuffer[r].push(s).map((s=>function(s){let e=0;for(const t of s)e+=t*t;return e/s.length}(s)));t[r]=o}));for(const s of t)console.assert(s.length===t[0].length);for(let s=0;s<t[0].length;s++){for(let e=0;e<t.length;e++){const r=t[e][s];this.powerResults[e].unshift(r),this.powerResults[e].length>=this.numFrames&&(this.powerResults[e]=this.powerResults[e].slice(0,this.numFrames))}this.onPowerCallback(this.powerResults)}}}class e{workingIndex=0;constructor(s){this.buffer=new Float32Array(s)}push(s){let e=[];for(const t of s)this.workingIndex>=this.buffer.length&&(e.push(this.buffer.slice()),this.workingIndex=0),this.buffer[this.workingIndex]=t,this.workingIndex++;return e}}function t(s,e,t){return o(s,e,t,.4)}function r(s,e,t){return o(s,e,t,3)}function o(s,e,t,r){const o=Math.round(r/e);let n=0;for(const[e,r]of s.entries()){const s=t(e);let h=0,i=0;for(const[s,e]of r.entries())s<o&&(h++,i+=e);n+=s*(i/h)}return 10*Math.log10(n)-.691}let n;var h;(h=n||(n={})).Momentary="momentary",h.ShortTerm="shortTerm";class i extends AudioWorkletProcessor{constructor(){super(),console.debug("EchoProcessor created");const e=.03;this.processor=new s(sampleRate,e,100,(s=>{const o=()=>1;this.onMomentaryLoudnessChange(t(s,e,o)),this.onShortTermLoudnessChange(r(s,e,o))}))}process(s,e,t){return this.processor.appendData(s[0]),!0}onMomentaryLoudnessChange(s){this.postMessage({type:n.Momentary,loudness:s})}onShortTermLoudnessChange(s){this.postMessage({type:n.ShortTerm,loudness:s})}postMessage(s){this.port.postMessage(s)}}registerProcessor("echo-processor",i);
//# sourceMappingURL=ebu-r128.worker.a98a7121.js.map
