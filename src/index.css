:root {
  --font-sans: Arial;
  --size-default: 0.25rem;
  --background-color: black;
  --text-color: #ededed;
  --primary-color: #89c402;
  /* The color that has the best contrast against the primary color. Usually white or black. */
  --primary-color-contrast: black;
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
  font-family: var(--font-sans);
  hyphens: auto;
  text-align: justify;
  text-align-last: none;
  text-rendering: optimizeLegibility;
}

/*
--- Button ---
*/

button {
  border-radius: 9999px;
  border-width: 0.1em;
  border-style: solid;
  margin: var(--size-default);
  background-color: var(--primary-color);
  border-color: transparent;
  color: var(--primary-color-contrast);
  padding: var(--size-default) calc(var(--size-default) * 2);
}

button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

button.is-svg-btn {
  /* note that there is no text in such a button, so remove line spacing */
  line-height: 0;
  /* make the button into the same aspect ratio as the icon, by using one uniform padding */
  padding: var(--size-default);
}

button>svg {
  /* the svg icons should have the proper contrast color against the primary color, when it is a default button */
  fill: var(--primary-color-contrast);
}

button.is-outlined {
  background: transparent;
  border-color: var(--primary-color);
  color: var(--primary-color);
}

button.is-outlined:hover {
  background: var(--primary-color);
  color: var(--primary-color-contrast);
}

button.is-outlined>svg {
  /* the svg icons on an outlined button should have the primary color, as there is no background */
  fill: var(--primary-color);
}

button.is-outlined:hover>svg {
  /* the svg icons on an outlined button that is hovered should have a contrast color, as there is suddenly background */
  fill: var(--primary-color-contrast);
}

button:enabled {
  cursor: pointer;
}

button.small {
  background: none;
  border: none;
  padding: 0;
  /* as there is no background, use primary color */
  color: var(--primary-color);
}

button.small>svg {
  fill: var(--primary-color);
}

/*
--- Anchor ---
*/

a {
  color: var(--text-color);
}

a:hover {
  color: var(--primary-color);
}

/* custom styling for external links: add a symbol indicating that the page will open a new tab */
a[target=_blank]::after {
  content: "";
  width: 1em;
  height: 1em;
  margin-left: 0.1em;
  /* Icon used from Google Material Icons "Open In New" (https://material.io/icons/) (<svg>) with Apache 2.0 License */
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='currentColor' viewBox='0 0 24 24'%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3Cpath d='M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z'/%3E%3C/svg%3E");
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  display: inline-block;
}

/*
--- Input ---
*/

input {
  background-color: transparent;
  border: 0.1em solid var(--text-color);
  color: var(--text-color);
}

input[type="range"] {
  -webkit-appearance: none;
  border: none;
  margin: 1em var(--size-default);
}

input[type="range"]::-webkit-slider-runnable-track {
  background-color: gray;
  border-radius: 9999px;
  height: var(--size-default);
  cursor: pointer;
}

input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  border: none;
  height: calc(var(--size-default) * 4);
  width: calc(var(--size-default) * 4);
  border-radius: 50%;
  background-color: var(--primary-color);
  cursor: pointer;
  margin-top: calc(-1.5 * var(--size-default));
}

/*
--- Details ---
*/

details>summary {
  text-decoration: underline;
}

details>summary:hover {
  cursor: pointer;
}

/*
--- HR ---
*/

hr {
  background-color: var(--text-color);
  opacity: 0.25;
  border: none;
  display: block;
  height: 2px;
  margin: 1.5rem 0;
}