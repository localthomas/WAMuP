:root {
  --font-sans: Arial;
  --size-default: 0.25rem;
  --background-color: black;
  --text-color: #ededed;
  --primary-color: #89c402;
  /* The color that has the best contrast against the primary color. Usually white or black. */
  --primary-color-contrast: black;
  --blur-strength: 2rem;
  --blur-background-color: rgba(0, 0, 0, 0.75);
  --table-grid-color: #4f4f4f;
  --table-grid-width: 0.05rem;
  --table-striped-color: rgba(255, 255, 255, 0.1);
  --floating-shadow-player-bar: 0 0 1rem 0 rgba(255, 255, 255, 0.2);
  --floating-shadow-cards: 0 0.5em 1em -0.125em rgba(255, 255, 255, 0.1), 0 0 0 0.1em rgba(255, 255, 255, 0.02);
}

body {
  margin: 0;
  background-color: var(--background-color);
  color: var(--text-color);
  font-family: var(--font-sans);
  hyphens: auto;
  text-align: justify;
  text-align-last: none;
  text-rendering: optimizeLegibility;
}

/*
--- Layout ---
*/

.container {
  max-width: 75rem;
  margin: 0 auto;
}

/* note: the navbar should always be at the top and the footer always pushed to the bottom */
#root {
  /* the root node (where all content is a children of) stretches to the whole viewport */
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

/* allow the main content (in the middle between nav and footer) to grow into the viewport size */
main {
  flex-grow: 1;
  margin-bottom: calc(var(--size-default) * 4);
}

/* --- Layout Asset-Detailed and Album --- */

.asset-detailed,
.album .columns {
  display: flex;
  flex-direction: row;
}

.asset-detailed .column,
.album .column {
  width: 50%;
  margin: var(--size-default);
}

.asset-detailed .column.details,
.album .details {
  text-align: center;
}

.asset-detailed .column.details table {
  margin: auto;
}

/*
--- Albums & Album Cards ---
*/

.albums {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: flex-start;
  text-align: initial;
}

.albums .album-card {
  flex: 0 0 14rem;
  margin: calc(var(--size-default) * 3);
  box-shadow: var(--floating-shadow-cards);
}

.albums .album-card .image-overlay-container {
  position: relative;
}

.albums .album-card .image-overlay {
  visibility: hidden;
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.4);
  color: #fff;
  transition: opacity .2s, visibility .2s;
}

.albums .album-card .image-overlay-container:hover .image-overlay {
  visibility: visible;
  opacity: 1;
  backdrop-filter: blur(var(--blur-strength));
}

.albums .album-card .card-content {
  padding: calc(var(--size-default) * 2) calc(var(--size-default) * 4);
  cursor: pointer;
}

.albums .album-card .card-content h4 {
  margin-top: calc(var(--size-default) * 3);
  margin-bottom: 0;
}

.albums .album-card .card-content p {
  margin: calc(var(--size-default) * 2) 0;
}

/*
--- Img ---
*/

img {
  display: block;
  height: auto;
  width: 100%;
  min-width: 100%;
  max-width: 100%;
}

/*
--- Spectrum ---
*/

.spectrum-canvas {
  width: 100%;
  height: 15rem;
}

.spectrum-canvas-label {
  text-align: center;
}

.spectrum-settings,
.spectrum-settings fieldset {
  display: flex;
  align-content: center;
  justify-content: center;
  align-items: stretch;
}

/*
--- Db-Scale ---
*/

.db-scale-label {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.db-scale {
  background-color: gray;
  position: relative;
  margin-bottom: calc(var(--size-default) * 2);
}

.db-scale .db-scale-bar {
  background-color: var(--primary-color);
  height: 1.5em;
}

.db-scale .db-scale-text {
  display: flex;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  color: var(--primary-color-contrast);
}

/*
--- Loudness Graph ---
*/

.loudness-graph fieldset {
  margin: auto;
}

.loudness-graph canvas {
  width: 100%;
  cursor: pointer;
}

.loudness-graph-label {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.loudness-graph-label table {
  width: fit-content;
}

.loudness-graph-label table tr {
  border: none !important;
}

.loudness-graph-label table td {
  padding: 0;
}

.loudness-graph-canvas-container {
  position: relative;
}

.loudness-graph-canvas-loading-spinner-container {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  width: 100%;
  height: 100%;
  align-items: center;
  justify-content: center;
}

/*
--- Navbar ---
*/

nav {
  /* calc a custom border color for navbar */
  --navbar-border-color: gray;
  --navbar-border-size: 0.1rem;
  align-items: center;
  justify-content: center;
  position: sticky;
  display: flex;
  top: 0;
  z-index: 1;
  margin-bottom: calc(var(--size-default) * 6);
  background-color: var(--blur-background-color);
  backdrop-filter: blur(var(--blur-strength));
  border-bottom-color: var(--navbar-border-color);
  border-bottom-style: solid;
  border-bottom-width: var(--navbar-border-size);
}

nav>a {
  display: flex;
  padding: calc(var(--size-default) * 2) calc(var(--size-default) * 4);
  text-decoration: none;
  border-radius: 0.5rem 0.5rem 0 0;
  border: var(--navbar-border-size) solid transparent;
}

nav>a:hover {
  background-color: var(--navbar-border-color);
  border-color: var(--navbar-border-color);
}

nav>a.active {
  color: var(--primary-color);
  background-color: var(--background-color);
  border-color: var(--navbar-border-color);
  margin-bottom: calc(-2 * var(--navbar-border-size));
  border-bottom-color: var(--background-color) !important;
}

/*
--- Progress ---
*/

progress {
  background-color: gray;
  border: none;
  height: calc(var(--size-default) * 2);
  -webkit-appearance: none;
}

::-webkit-progress-value {
  background-color: var(--primary-color);
}

/*
--- Player-bar (footer) ---
*/

footer {
  position: sticky;
  bottom: 0;
  background-color: var(--blur-background-color);
  backdrop-filter: blur(var(--blur-strength));
  box-shadow: var(--floating-shadow-player-bar);
}

footer p {
  text-align: center;
  margin: 0;
}

.audio-controls {
  display: flex;
  align-items: center;
}

.audio-controls>progress {
  cursor: pointer;
  margin: 0rem var(--size-default);
  width: 100%;
}


.audio-controls>.time-display {
  white-space: nowrap;
  margin: 0rem var(--size-default);
}

/*
--- Table ---
*/

/* --- Asset Detailed Table --- */

.asset-detailed table,
table.overview {
  width: max-content;
  max-width: 100%;
}

/* the first column should not wrap, as it contains no dynamic content */
.asset-detailed table td:first-child,
/* an overview table only contains short numbers, so prevent wrapping in every cell */
table.overview {
  white-space: nowrap;
}

/* --- Normal Table --- */

table {
  width: calc(100% - calc(var(--size-default) * 2));
  margin: var(--size-default);
  border-collapse: collapse;
  text-align: initial;
}

table td {
  vertical-align: middle;
}

/* border of header row of table is stronger than the other lines */
table>thead>tr {
  border-bottom-style: solid;
  border-bottom-width: calc(var(--table-grid-width) * 2);
  border-bottom-color: var(--table-grid-color);
}

/* default padding for all cells in a table */
table th,
table td {
  padding: calc(var(--size-default) * 2) calc(var(--size-default) * 1);
}

/* stripes on each second row of a table */
table.is-striped tbody tr:not(.is-selected):nth-child(2n) {
  background-color: var(--table-striped-color);
}

/* special setup for the last column of tables, as these always contain svg-buttons */
table td.fixed-width {
  padding: 0;
  white-space: nowrap;
  /* should be as small as possible */
  width: 0;
}

/* border styling should only affect each element before last, as it draws a line between them */
table tr:not(:last-child) {
  border-bottom-style: solid;
  border-bottom-width: var(--table-grid-width);
  border-bottom-color: var(--table-grid-color);
}

tr.active-row * {
  color: var(--primary-color);
}

/*
--- Button ---
*/

button {
  border-radius: 9999px;
  border-width: 0.1em;
  border-style: solid;
  margin: var(--size-default);
  background-color: var(--primary-color);
  border-color: transparent;
  color: var(--primary-color-contrast);
  padding: var(--size-default) calc(var(--size-default) * 2);
}

button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

button.is-svg-btn {
  /* note that there is no text in such a button, so remove line spacing */
  line-height: 0;
  /* make the button into the same aspect ratio as the icon, by using one uniform padding */
  padding: var(--size-default);
}

button>svg {
  /* the svg icons should have the proper contrast color against the primary color, when it is a default button */
  fill: var(--primary-color-contrast);
}

button.is-outlined {
  background: transparent;
  border-color: var(--primary-color);
  color: var(--primary-color);
}

button.is-outlined:hover {
  background: var(--primary-color);
  color: var(--primary-color-contrast);
}

button.is-outlined>svg {
  /* the svg icons on an outlined button should have the primary color, as there is no background */
  fill: var(--primary-color);
}

button.is-outlined:hover>svg {
  /* the svg icons on an outlined button that is hovered should have a contrast color, as there is suddenly background */
  fill: var(--primary-color-contrast);
}

button:enabled {
  cursor: pointer;
}

button.small {
  background: none;
  border: none;
  padding: 0;
  /* as there is no background, use primary color */
  color: var(--primary-color);
}

button.small>svg {
  fill: var(--primary-color);
}

/*
--- Anchor ---
*/

a {
  color: var(--text-color);
}

a:hover {
  color: var(--primary-color);
}

/* custom styling for external links: add a symbol indicating that the page will open a new tab */
a[target=_blank]::after {
  content: "";
  width: 1em;
  height: 1em;
  margin-left: 0.1em;
  /* Icon used from Google Material Icons "Open In New" (https://material.io/icons/) (<svg>) with Apache 2.0 License */
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='currentColor' viewBox='0 0 24 24'%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3Cpath d='M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z'/%3E%3C/svg%3E");
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  display: inline-block;
}

/*
--- Input ---
*/

input {
  background-color: transparent;
  border: 0.1em solid var(--text-color);
  color: var(--text-color);
}

input[type="range"] {
  -webkit-appearance: none;
  border: none;
  margin: 1em var(--size-default);
}

input[type="range"]::-webkit-slider-runnable-track {
  background-color: gray;
  border-radius: 9999px;
  height: var(--size-default);
  cursor: pointer;
}

input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  border: none;
  height: calc(var(--size-default) * 4);
  width: calc(var(--size-default) * 4);
  border-radius: 50%;
  background-color: var(--primary-color);
  cursor: pointer;
  margin-top: calc(-1.5 * var(--size-default));
}

/*
--- Fieldset ---
*/

fieldset {
  max-width: max-content;
}

/*
Inputs with sliders should adjust to the fieldset's size.
Note that the fieldset already includes a padding, so any margin is unnecessary.
*/
fieldset input[type="range"] {
  width: 100%;
  margin: 0;
}

/*
--- Details ---
*/

details>summary {
  text-decoration: underline;
}

details>summary:hover {
  cursor: pointer;
}

/*
--- HR ---
*/

hr {
  background-color: var(--text-color);
  opacity: 0.25;
  border: none;
  display: block;
  height: 2px;
  margin: 1.5rem 0;
}

/*
--- Loading Spinner ---
*/

.loading-spinner-small {
  --spinner-line-width: 0.2em;
  --spinner-size: calc(1em - calc(var(--spinner-line-width) * 2));
  display: inline-block;
  vertical-align: middle;
  border: var(--spinner-line-width) solid transparent;
  border-top: var(--spinner-line-width) solid var(--text-color);
  border-radius: 50%;
  width: var(--spinner-size);
  height: var(--spinner-size);
  animation: spinAround 500ms infinite linear;
}

/*
--- Misc ---
*/

.hidden {
  visibility: hidden;
}

.text-right {
  text-align: right;
}

@keyframes spinAround {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}